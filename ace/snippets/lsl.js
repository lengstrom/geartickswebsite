define("ace/snippets/lsl",["require","exports","module"],function(e,t,n){t.snippetText="snippet @\ntt@${1:label}\nsnippet CAMERA_ACTIVE\nttCAMERA_ACTIVE, ${1:integer isActive},\nsnippet CAMERA_BEHINDNESS_ANGLE\nttCAMERA_BEHINDNESS_ANGLE, ${1:float degrees},\nsnippet CAMERA_BEHINDNESS_LAG\nttCAMERA_BEHINDNESS_LAG, ${1:float seconds},\nsnippet CAMERA_DISTANCE\nttCAMERA_DISTANCE, ${1:float meters},\nsnippet CAMERA_FOCUS\nttCAMERA_FOCUS, ${1:vector position},\nsnippet CAMERA_FOCUS_LAG\nttCAMERA_FOCUS_LAG, ${1:float seconds},\nsnippet CAMERA_FOCUS_LOCKED\nttCAMERA_FOCUS_LOCKED, ${1:integer isLocked},\nsnippet CAMERA_FOCUS_OFFSET\nttCAMERA_FOCUS_OFFSET, ${1:vector meters},\nsnippet CAMERA_FOCUS_THRESHOLD\nttCAMERA_FOCUS_THRESHOLD, ${1:float meters},\nsnippet CAMERA_PITCH\nttCAMERA_PITCH, ${1:float degrees},\nsnippet CAMERA_POSITION\nttCAMERA_POSITION, ${1:vector position},\nsnippet CAMERA_POSITION_LAG\nttCAMERA_POSITION_LAG, ${1:float seconds},\nsnippet CAMERA_POSITION_LOCKED\nttCAMERA_POSITION_LOCKED, ${1:integer isLocked},\nsnippet CAMERA_POSITION_THRESHOLD\nttCAMERA_POSITION_THRESHOLD, ${1:float meters},\nsnippet CHARACTER_AVOIDANCE_MODE\nttCHARACTER_AVOIDANCE_MODE, ${1:integer flags},\nsnippet CHARACTER_DESIRED_SPEED\nttCHARACTER_DESIRED_SPEED, ${1:float speed},\nsnippet CHARACTER_DESIRED_TURN_SPEED\nttCHARACTER_DESIRED_TURN_SPEED, ${1:float speed},\nsnippet CHARACTER_LENGTH\nttCHARACTER_LENGTH, ${1:float length},\nsnippet CHARACTER_MAX_TURN_RADIUS\nttCHARACTER_MAX_TURN_RADIUS, ${1:float radius},\nsnippet CHARACTER_ORIENTATION\nttCHARACTER_ORIENTATION, ${1:integer orientation},\nsnippet CHARACTER_RADIUS\nttCHARACTER_RADIUS, ${1:float radius},\nsnippet CHARACTER_STAY_WITHIN_PARCEL\nttCHARACTER_STAY_WITHIN_PARCEL, ${1:boolean stay},\nsnippet CHARACTER_TYPE\nttCHARACTER_TYPE, ${1:integer type},\nsnippet HTTP_BODY_MAXLENGTH\nttHTTP_BODY_MAXLENGTH, ${1:integer length},\nsnippet HTTP_CUSTOM_HEADER\nttHTTP_CUSTOM_HEADER, ${1:string name}, ${2:string value},\nsnippet HTTP_METHOD\nttHTTP_METHOD, ${1:string method},\nsnippet HTTP_MIMETYPE\nttHTTP_MIMETYPE, ${1:string mimeType},\nsnippet HTTP_PRAGMA_NO_CACHE\nttHTTP_PRAGMA_NO_CACHE, ${1:integer send_header},\nsnippet HTTP_VERBOSE_THROTTLE\nttHTTP_VERBOSE_THROTTLE, ${1:integer noisy},\nsnippet HTTP_VERIFY_CERT\nttHTTP_VERIFY_CERT, ${1:integer verify},\nsnippet RC_DATA_FLAGS\nttRC_DATA_FLAGS, ${1:integer flags},\nsnippet RC_DETECT_PHANTOM\nttRC_DETECT_PHANTOM, ${1:integer dectedPhantom},\nsnippet RC_MAX_HITS\nttRC_MAX_HITS, ${1:integer maxHits},\nsnippet RC_REJECT_TYPES\nttRC_REJECT_TYPES, ${1:integer filterMask},\nsnippet at_rot_target\nttat_rot_target(${1:integer handle}, ${2:rotation targetrot}, ${3:rotation ourrot})\ntt{\ntttt$0\ntt}\nsnippet at_target\nttat_target(${1:integer tnum}, ${2:vector targetpos}, ${3:vector ourpos})\ntt{\ntttt$0\ntt}\nsnippet attach\nttattach(${1:key id})\ntt{\ntttt$0\ntt}\nsnippet changed\nttchanged(${1:integer change})\ntt{\ntttt$0\ntt}\nsnippet collision\nttcollision(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet collision_end\nttcollision_end(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet collision_start\nttcollision_start(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet control\nttcontrol(${1:key id}, ${2:integer level}, ${3:integer edge})\ntt{\ntttt$0\ntt}\nsnippet dataserver\nttdataserver(${1:key query_id}, ${2:string data})\ntt{\ntttt$0\ntt}\nsnippet do\nttdo\ntt{\ntttt$0\ntt}\nttwhile (${1:condition});\nsnippet else\nttelse\ntt{\ntttt$0\ntt}\nsnippet else if\nttelse if (${1:condition})\ntt{\ntttt$0\ntt}\nsnippet email\nttemail(${1:string time}, ${2:string address}, ${3:string subject}, ${4:string message}, ${5:integer num_left})\ntt{\ntttt$0\ntt}\nsnippet for\nttfor (${1:start}; ${3:condition}; ${3:step})\ntt{\ntttt$0\ntt}\nsnippet http_request\ntthttp_request(${1:key request_id}, ${2:string method}, ${3:string body})\ntt{\ntttt$0\ntt}\nsnippet http_response\ntthttp_response(${1:key request_id}, ${2:integer status}, ${3:list metadata}, ${4:string body})\ntt{\ntttt$0\ntt}\nsnippet if\nttif (${1:condition})\ntt{\ntttt$0\ntt}\nsnippet jump\nttjump ${1:label};\nsnippet land_collision\nttland_collision(${1:vector pos})\ntt{\ntttt$0\ntt}\nsnippet land_collision_end\nttland_collision_end(${1:vector pos})\ntt{\ntttt$0\ntt}\nsnippet land_collision_start\nttland_collision_start(${1:vector pos})\ntt{\ntttt$0\ntt}\nsnippet link_message\nttlink_message(${1:integer sender_num}, ${2:integer num}, ${3:string str}, ${4:key id})\ntt{\ntttt$0\ntt}\nsnippet listen\nttlisten(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string message})\ntt{\ntttt$0\ntt}\nsnippet llAbs\nttllAbs(${1:integer val})\nsnippet llAcos\nttllAcos(${1:float val})\nsnippet llAddToLandBanList\nttllAddToLandBanList(${1:key avatar}, ${2:float hours})\nsnippet llAddToLandPassList\nttllAddToLandPassList(${1:key avatar}, ${2:float hours})\nsnippet llAdjustSoundVolume\nttllAdjustSoundVolume(${1:float volume})\nsnippet llAllowInventoryDrop\nttllAllowInventoryDrop(${1:integer add})\nsnippet llAngleBetween\nttllAngleBetween(${1:rotation a}, ${2:rotation b})\nsnippet llApplyImpulse\nttllApplyImpulse(${1:vector force}, ${2:integer local})\nsnippet llApplyRotationalImpulse\nttllApplyRotationalImpulse(${1:vector force}, ${2:integer local})\nsnippet llAsin\nttllAsin(${1:float val})\nsnippet llAtan2\nttllAtan2(${1:float y}, ${2:float x})\nsnippet llAttachToAvatar\nttllAttachToAvatar(${1:integer attach_point})\nsnippet llAttachToAvatarTemp\nttllAttachToAvatarTemp(${1:integer attach_point})\nsnippet llAvatarOnLinkSitTarget\nttllAvatarOnLinkSitTarget(${1:integer link})\nsnippet llAxes2Rot\nttllAxes2Rot(${1:vector fwd}, ${2:vector left}, ${3:vector up})\nsnippet llAxisAngle2Rot\nttllAxisAngle2Rot(${1:vector axis}, ${2:float angle})\nsnippet llBase64ToInteger\nttllBase64ToInteger(${1:string str})\nsnippet llBase64ToString\nttllBase64ToString(${1:string str})\nsnippet llBreakLink\nttllBreakLink(${1:integer link})\nsnippet llCastRay\nttllCastRay(${1:vector start}, ${2:vector end}, ${3:list options})\nsnippet llCeil\nttllCeil(${1:float val})\nsnippet llClearLinkMedia\nttllClearLinkMedia(${1:integer link}, ${2:integer face})\nsnippet llClearPrimMedia\nttllClearPrimMedia(${1:integer link}, ${2:integer face})\nsnippet llCloseRemoteDataChannel\nttllCloseRemoteDataChannel(${1:key channel})\nsnippet llCollisionFilter\nttllCollisionFilter(${1:string name}, ${2:key id}, ${3:integer accept})\nsnippet llCollisionSound\nttllCollisionSound(${1:string impact_sound}, ${2:float impact_volume})\nsnippet llCollisionSprite\nttllCollisionSprite(${1:string impact_sprite})\nsnippet llCos\nttllCos(${1:float theta})\nsnippet llCreateCharacter\nttllCreateCharacter(${1:list options})\nsnippet llCreateLink\nttllCreateLink(${1:key target}, ${2:integer parent})\nsnippet llCSV2List\nttllCSV2List(${1:string src})\nsnippet llDeleteSubList\nttllDeleteSubList(${1:list src}, ${2:integer start}, ${3:integer end})\nsnippet llDeleteSubString\nttllDeleteSubString(${1:string src}, ${2:integer start}, ${3:integer end})\nsnippet llDetectedGrab\nttllDetectedGrab(${1:integer number})\nsnippet llDetectedGroup\nttllDetectedGroup(${1:integer number})\nsnippet llDetectedKey\nttllDetectedKey(${1:integer number})\nsnippet llDetectedLinkNumber\nttllDetectedLinkNumber(${1:integer number})\nsnippet llDetectedName\nttllDetectedName(${1:integer number})\nsnippet llDetectedOwner\nttllDetectedOwner(${1:integer number})\nsnippet llDetectedPos\nttllDetectedPos(${1:integer number})\nsnippet llDetectedRot\nttllDetectedRot(${1:integer number})\nsnippet llDetectedTouchBinormal\nttllDetectedTouchBinormal(${1:integer number})\nsnippet llDetectedTouchFace\nttllDetectedTouchFace(${1:integer number})\nsnippet llDetectedTouchNormal\nttllDetectedTouchNormal(${1:integer number})\nsnippet llDetectedTouchPos\nttllDetectedTouchPos(${1:integer number})\nsnippet llDetectedTouchST\nttllDetectedTouchST(${1:integer number})\nsnippet llDetectedTouchUV\nttllDetectedTouchUV(${1:integer number})\nsnippet llDetectedType\nttllDetectedType(${1:integer number})\nsnippet llDetectedVel\nttllDetectedVel(${1:integer number})\nsnippet llDialog\nttllDialog(${1:key avatar}, ${2:string message}, ${3:list buttons}, ${4:integer channel})\nsnippet llDumpList2String\nttllDumpList2String(${1:list src}, ${2:string separator})\nsnippet llEdgeOfWorld\nttllEdgeOfWorld(${1:vector pos}, ${2:vector dir})\nsnippet llEjectFromLand\nttllEjectFromLand(${1:key avatar})\nsnippet llEmail\nttllEmail(${1:string address}, ${2:string subject}, ${3:string message})\nsnippet llEscapeURL\nttllEscapeURL(${1:string url})\nsnippet llEuler2Rot\nttllEuler2Rot(${1:vector v})\nsnippet llExecCharacterCmd\nttllExecCharacterCmd(${1:integer command}, ${2:list options})\nsnippet llEvade\nttllEvade(${1:key target}, ${2:list options})\nsnippet llFabs\nttllFabs(${1:float val})\nsnippet llFleeFrom\nttllFleeFrom(${1:vector position}, ${2:float distance}, ${3:list options})\nsnippet llFloor\nttllFloor(${1:float val})\nsnippet llForceMouselook\nttllForceMouselook(${1:integer mouselook})\nsnippet llFrand\nttllFrand(${1:float mag})\nsnippet llGetAgentInfo\nttllGetAgentInfo(${1:key id})\nsnippet llGetAgentLanguage\nttllGetAgentLanguage(${1:key avatar})\nsnippet llGetAgentList\nttllGetAgentList(${1:integer scope}, ${2:list options})\nsnippet llGetAgentSize\nttllGetAgentSize(${1:key avatar})\nsnippet llGetAlpha\nttllGetAlpha(${1:integer face})\nsnippet llGetAnimation\nttllGetAnimation(${1:key id})\nsnippet llGetAnimationList\nttllGetAnimationList(${1:key avatar})\nsnippet llGetAnimationOverride\nttllGetAnimationOverride(${1:string anim_state})\nsnippet llGetBoundingBox\nttllGetBoundingBox(${1:key object})\nsnippet llGetClosestNavPoint\nttllGetClosestNavPoint(${1:vector point}, ${2:list options})\nsnippet llGetColor\nttllGetColor(${1:integer face})\nsnippet llGetDisplayName\nttllGetDisplayName(${1:key id})\nsnippet llGetEnv\nttllGetEnv(${1:string name})\nsnippet llGetHTTPHeader\nttllGetHTTPHeader(${1:key request_id}, ${2:string header})\nsnippet llGetInventoryCreator\nttllGetInventoryCreator(${1:string item})\nsnippet llGetInventoryKey\nttllGetInventoryKey(${1:string name})\nsnippet llGetInventoryName\nttllGetInventoryName(${1:integer type}, ${2:integer number})\nsnippet llGetInventoryNumber\nttllGetInventoryNumber(${1:integer type})\nsnippet llGetInventoryPermMask\nttllGetInventoryPermMask(${1:string item}, ${2:integer mask})\nsnippet llGetInventoryType\nttllGetInventoryType(${1:string name})\nsnippet llGetLandOwnerAt\nttllGetLandOwnerAt(${1:vector pos})\nsnippet llGetLinkKey\nttllGetLinkKey(${1:integer link})\nsnippet llGetLinkMedia\nttllGetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})\nsnippet llGetLinkName\nttllGetLinkName(${1:integer link})\nsnippet llGetLinkNumberOfSides\nttllGetLinkNumberOfSides(${1:integer link})\nsnippet llGetLinkPrimitiveParams\nttllGetLinkPrimitiveParams(${1:integer link}, ${2:list params})\nsnippet llGetListEntryType\nttllGetListEntryType(${1:list src}, ${2:integer index})\nsnippet llGetListLength\nttllGetListLength(${1:list src})\nsnippet llGetNextEmail\nttllGetNextEmail(${1:string address}, ${2:string subject})\nsnippet llGetNotecardLine\nttllGetNotecardLine(${1:string name}, ${2:integer line})\nsnippet llGetNumberOfNotecardLines\nttllGetNumberOfNotecardLines(${1:string name})\nsnippet llGetObjectDetails\nttllGetObjectDetails(${1:key id}, ${2:list params})\nsnippet llGetObjectMass\nttllGetObjectMass(${1:key id})\nsnippet llGetObjectPermMask\nttllGetObjectPermMask(${1:integer mask})\nsnippet llGetObjectPrimCount\nttllGetObjectPrimCount(${1:key prim})\nsnippet llGetOwnerKey\nttllGetOwnerKey(${1:key id})\nsnippet llGetParcelDetails\nttllGetParcelDetails(${1:vector pos}, ${2:list params})\nsnippet llGetParcelFlags\nttllGetParcelFlags(${1:vector pos})\nsnippet llGetParcelMaxPrims\nttllGetParcelMaxPrims(${1:vector pos}, ${2:integer sim_wide})\nsnippet llGetParcelPrimCount\nttllGetParcelPrimCount(${1:vector pos}, ${2:integer category}, ${3:integer sim_wide})\nsnippet llGetParcelPrimOwners\nttllGetParcelPrimOwners(${1:vector pos})\nsnippet llGetPrimitiveParams\nttllGetPrimitiveParams(${1:list params})\nsnippet llGetPrimMediaParams\nttllGetPrimMediaParams(${1:integer face}, ${2:list params})\nsnippet llGetScriptState\nttllGetScriptState(${1:string script})\nsnippet llGetSimStats\nttllGetSimStats(${1:integer stat_type})\nsnippet llGetStaticPath\nttllGetStaticPath(${1:vector start}, ${2:vector end}, ${3:float radius}, ${4:list params})\nsnippet llGetStatus\nttllGetStatus(${1:integer status})\nsnippet llGetSubString\nttllGetSubString(${1:string src}, ${2:integer start}, ${3:integer end})\nsnippet llGetTexture\nttllGetTexture(${1:integer face})\nsnippet llGetTextureOffset\nttllGetTextureOffset(${1:integer face})\nsnippet llGetTextureRot\nttllGetTextureRot(${1:integer face})\nsnippet llGetTextureScale\nttllGetTextureScale(${1:integer face})\nsnippet llGetUsername\nttllGetUsername(${1:key id})\nsnippet llGiveInventory\nttllGiveInventory(${1:key destination}, ${2:string inventory})\nsnippet llGiveInventoryList\nttllGiveInventoryList(${1:key target}, ${2:string folder}, ${3:list inventory})\nsnippet llGiveMoney\nttllGiveMoney(${1:key destination}, ${2:integer amount})\nsnippet llGround\nttllGround(${1:vector offset})\nsnippet llGroundContour\nttllGroundContour(${1:vector offset})\nsnippet llGroundNormal\nttllGroundNormal(${1:vector offset})\nsnippet llGroundRepel\nttllGroundRepel(${1:float height}, ${2:integer water}, ${3:float tau})\nsnippet llGroundSlope\nttllGroundSlope(${1:vector offset})\nsnippet llHTTPRequest\nttllHTTPRequest(${1:string url}, ${2:list parameters}, ${3:string body})\nsnippet llHTTPResponse\nttllHTTPResponse(${1:key request_id}, ${2:integer status}, ${3:string body})\nsnippet llInsertString\nttllInsertString(${1:string dst}, ${2:integer pos}, ${3:string src})\nsnippet llInstantMessage\nttllInstantMessage(${1:key user}, ${2:string message})\nsnippet llIntegerToBase64\nttllIntegerToBase64(${1:integer number})\nsnippet llJson2List\nttllJson2List(${1:string json})\nsnippet llJsonGetValue\nttllJsonGetValue(${1:string json}, ${2:list specifiers})\nsnippet llJsonSetValue\nttllJsonSetValue(${1:string json}, ${2:list specifiers}, ${3:string newValue})\nsnippet llJsonValueType\nttllJsonValueType(${1:string json}, ${2:list specifiers})\nsnippet llKey2Name\nttllKey2Name(${1:key id})\nsnippet llLinkParticleSystem\nttllLinkParticleSystem(${1:integer link}, ${2:list rules})\nsnippet llLinkSitTarget\nttllLinkSitTarget(${1:integer link}, ${2:vector offset}, ${3:rotation rot})\nsnippet llList2CSV\nttllList2CSV(${1:list src})\nsnippet llList2Float\nttllList2Float(${1:list src}, ${2:integer index})\nsnippet llList2Integer\nttllList2Integer(${1:list src}, ${2:integer index})\nsnippet llList2Json\nttllList2Json(${1:string type}, ${2:list values})\nsnippet llList2Key\nttllList2Key(${1:list src}, ${2:integer index})\nsnippet llList2List\nttllList2List(${1:list src}, ${2:integer start}, ${3:integer end})\nsnippet llList2ListStrided\nttllList2ListStrided(${1:list src}, ${2:integer start}, ${3:integer end}, ${4:integer stride})\nsnippet llList2Rot\nttllList2Rot(${1:list src}, ${2:integer index})\nsnippet llList2String\nttllList2String(${1:list src}, ${2:integer index})\nsnippet llList2Vector\nttllList2Vector(${1:list src}, ${2:integer index})\nsnippet llListen\nttllListen(${1:integer channel}, ${2:string name}, ${3:key id}, ${4:string msg})\nsnippet llListenControl\nttllListenControl(${1:integer handle}, ${2:integer active})\nsnippet llListenRemove\nttllListenRemove(${1:integer handle})\nsnippet llListFindList\nttllListFindList(${1:list src}, ${2:list test})\nsnippet llListInsertList\nttllListInsertList(${1:list dest}, ${2:list src}, ${3:integer start})\nsnippet llListRandomize\nttllListRandomize(${1:list src}, ${2:integer stride})\nsnippet llListReplaceList\nttllListReplaceList(${1:list dest}, ${2:list src}, ${3:integer start}, ${4:integer end})\nsnippet llListSort\nttllListSort(${1:list src}, ${2:integer stride}, ${3:integer ascending})\nsnippet llListStatistics\nttllListStatistics(${1:integer operation}, ${2:list src})\nsnippet llLoadURL\nttllLoadURL(${1:key avatar}, ${2:string message}, ${3:string url})\nsnippet llLog\nttllLog(${1:float val})\nsnippet llLog10\nttllLog10(${1:float val})\nsnippet llLookAt\nttllLookAt(${1:vector target}, ${2:float strength}, ${3:float damping})\nsnippet llLoopSound\nttllLoopSound(${1:string sound}, ${2:float volume})\nsnippet llLoopSoundMaster\nttllLoopSoundMaster(${1:string sound}, ${2:float volume})\nsnippet llLoopSoundSlave\nttllLoopSoundSlave(${1:string sound}, ${2:float volume})\nsnippet llManageEstateAccess\nttllManageEstateAccess(${1:integer action}, ${2:key avatar})\nsnippet llMapDestination\nttllMapDestination(${1:string simname}, ${2:vector pos}, ${3:vector look_at})\nsnippet llMD5String\nttllMD5String(${1:string src}, ${2:integer nonce})\nsnippet llMessageLinked\nttllMessageLinked(${1:integer link}, ${2:integer num}, ${3:string str}, ${4:key id})\nsnippet llMinEventDelay\nttllMinEventDelay(${1:float delay})\nsnippet llModifyLand\nttllModifyLand(${1:integer action}, ${2:integer brush})\nsnippet llModPow\nttllModPow(${1:integer a}, ${2:integer b}, ${3:integer c})\nsnippet llMoveToTarget\nttllMoveToTarget(${1:vector target}, ${2:float tau})\nsnippet llNavigateTo\nttllNavigateTo(${1:vector pos}, ${2:list options})\nsnippet llOffsetTexture\nttllOffsetTexture(${1:float u}, ${2:float v}, ${3:integer face})\nsnippet llOverMyLand\nttllOverMyLand(${1:key id})\nsnippet llOwnerSay\nttllOwnerSay(${1:string msg})\nsnippet llParcelMediaCommandList\nttllParcelMediaCommandList(${1:list commandList})\nsnippet llParcelMediaQuery\nttllParcelMediaQuery(${1:list query})\nsnippet llParseString2List\nttllParseString2List(${1:string src}, ${2:list separators}, ${3:list spacers})\nsnippet llParseStringKeepNulls\nttllParseStringKeepNulls(${1:string src}, ${2:list separators}, ${3:list spacers})\nsnippet llParticleSystem\nttllParticleSystem(${1:list rules})\nsnippet llPassCollisions\nttllPassCollisions(${1:integer pass})\nsnippet llPassTouches\nttllPassTouches(${1:integer pass})\nsnippet llPatrolPoints\nttllPatrolPoints(${1:list patrolPoints}, ${2:list options})\nsnippet llPlaySound\nttllPlaySound(${1:string sound}, ${2:float volume})\nsnippet llPlaySoundSlave\nttllPlaySoundSlave(${1:string sound}, ${2:float volume})\nsnippet llPow\nttllPow(${1:float base}, ${2:float exponent})\nsnippet llPreloadSound\nttllPreloadSound(${1:string sound})\nsnippet llPursue\nttllPursue(${1:key target}, ${2:list options})\nsnippet llPushObject\nttllPushObject(${1:key target}, ${2:vector impulse}, ${3:vector ang_impulse}, ${4:integer local})\nsnippet llRegionSay\nttllRegionSay(${1:integer channel}, ${2:string msg})\nsnippet llRegionSayTo\nttllRegionSayTo(${1:key target}, ${2:integer channel}, ${3:string msg})\nsnippet llReleaseURL\nttllReleaseURL(${1:string url})\nsnippet llRemoteDataReply\nttllRemoteDataReply(${1:key channel}, ${2:key message_id}, ${3:string sdata}, ${4:integer idata})\nsnippet llRemoteLoadScriptPin\nttllRemoteLoadScriptPin(${1:key target}, ${2:string name}, ${3:integer pin}, ${4:integer running}, ${5:integer start_param})\nsnippet llRemoveFromLandBanList\nttllRemoveFromLandBanList(${1:key avatar})\nsnippet llRemoveFromLandPassList\nttllRemoveFromLandPassList(${1:key avatar})\nsnippet llRemoveInventory\nttllRemoveInventory(${1:string item})\nsnippet llRemoveVehicleFlags\nttllRemoveVehicleFlags(${1:integer flags})\nsnippet llRequestAgentData\nttllRequestAgentData(${1:key id}, ${2:integer data})\nsnippet llRequestDisplayName\nttllRequestDisplayName(${1:key id})\nsnippet llRequestInventoryData\nttllRequestInventoryData(${1:string name})\nsnippet llRequestPermissions\nttllRequestPermissions(${1:key agent}, ${2:integer permissions})\nsnippet llRequestSimulatorData\nttllRequestSimulatorData(${1:string region}, ${2:integer data})\nsnippet llRequestUsername\nttllRequestUsername(${1:key id})\nsnippet llResetAnimationOverride\nttllResetAnimationOverride(${1:string anim_state})\nsnippet llResetOtherScript\nttllResetOtherScript(${1:string name})\nsnippet llReturnObjectsByID\nttllReturnObjectsByID(${1:list objects})\nsnippet llReturnObjectsByOwner\nttllReturnObjectsByOwner(${1:key owner}, ${2:integer scope})\nsnippet llRezAtRoot\nttllRezAtRoot(${1:string inventory}, ${2:vector position}, ${3:vector velocity}, ${4:rotation rot}, ${5:integer param})\nsnippet llRezObject\nttllRezObject(${1:string inventory}, ${2:vector pos}, ${3:vector vel}, ${4:rotation rot}, ${5:integer param})\nsnippet llRot2Angle\nttllRot2Angle(${1:rotation rot})\nsnippet llRot2Axis\nttllRot2Axis(${1:rotation rot})\nsnippet llRot2Euler\nttllRot2Euler(${1:rotation quat})\nsnippet llRot2Fwd\nttllRot2Fwd(${1:rotation q})\nsnippet llRot2Left\nttllRot2Left(${1:rotation q})\nsnippet llRot2Up\nttllRot2Up(${1:rotation q})\nsnippet llRotateTexture\nttllRotateTexture(${1:float angle}, ${2:integer face})\nsnippet llRotBetween\nttllRotBetween(${1:vector start}, ${2:vector end})\nsnippet llRotLookAt\nttllRotLookAt(${1:rotation target_direction}, ${2:float strength}, ${3:float damping})\nsnippet llRotTarget\nttllRotTarget(${1:rotation rot}, ${2:float error})\nsnippet llRotTargetRemove\nttllRotTargetRemove(${1:integer handle})\nsnippet llRound\nttllRound(${1:float val})\nsnippet llSameGroup\nttllSameGroup(${1:key uuid})\nsnippet llSay\nttllSay(${1:integer channel}, ${2:string msg})\nsnippet llScaleTexture\nttllScaleTexture(${1:float u}, ${2:float v}, ${3:integer face})\nsnippet llScriptDanger\nttllScriptDanger(${1:vector pos})\nsnippet llScriptProfiler\nttllScriptProfiler(${1:integer flags})\nsnippet llSendRemoteData\nttllSendRemoteData(${1:key channel}, ${2:string dest}, ${3:integer idata}, ${4:string sdata})\nsnippet llSensor\nttllSensor(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc})\nsnippet llSensorRepeat\nttllSensorRepeat(${1:string name}, ${2:key id}, ${3:integer type}, ${4:float range}, ${5:float arc}, ${6:float rate})\nsnippet llSetAlpha\nttllSetAlpha(${1:float alpha}, ${2:integer face})\nsnippet llSetAngularVelocity\nttllSetAngularVelocity(${1:vector force}, ${2:integer local})\nsnippet llSetAnimationOverride\nttllSetAnimationOverride(${1:string anim_state}, ${2:string anim})\nsnippet llSetBuoyancy\nttllSetBuoyancy(${1:float buoyancy})\nsnippet llSetCameraAtOffset\nttllSetCameraAtOffset(${1:vector offset})\nsnippet llSetCameraEyeOffset\nttllSetCameraEyeOffset(${1:vector offset})\nsnippet llSetCameraParams\nttllSetCameraParams(${1:list rules})\nsnippet llSetClickAction\nttllSetClickAction(${1:integer action})\nsnippet llSetColor\nttllSetColor(${1:vector color}, ${2:integer face})\nsnippet llSetContentType\nttllSetContentType(${1:key request_id}, ${2:integer content_type})\nsnippet llSetDamage\nttllSetDamage(${1:float damage})\nsnippet llSetForce\nttllSetForce(${1:vector force}, ${2:integer local})\nsnippet llSetForceAndTorque\nttllSetForceAndTorque(${1:vector force}, ${2:vector torque}, ${3:integer local})\nsnippet llSetHoverHeight\nttllSetHoverHeight(${1:float height}, ${2:integer water}, ${3:float tau})\nsnippet llSetKeyframedMotion\nttllSetKeyframedMotion(${1:list keyframes}, ${2:list options})\nsnippet llSetLinkAlpha\nttllSetLinkAlpha(${1:integer link}, ${2:float alpha}, ${3:integer face})\nsnippet llSetLinkCamera\nttllSetLinkCamera(${1:integer link}, ${2:vector eye}, ${3:vector at})\nsnippet llSetLinkColor\nttllSetLinkColor(${1:integer link}, ${2:vector color}, ${3:integer face})\nsnippet llSetLinkMedia\nttllSetLinkMedia(${1:integer link}, ${2:integer face}, ${3:list params})\nsnippet llSetLinkPrimitiveParams\nttllSetLinkPrimitiveParams(${1:integer link}, ${2:list rules})\nsnippet llSetLinkPrimitiveParamsFast\nttllSetLinkPrimitiveParamsFast(${1:integer link}, ${2:list rules})\nsnippet llSetLinkTexture\nttllSetLinkTexture(${1:integer link}, ${2:string texture}, ${3:integer face})\nsnippet llSetLinkTextureAnim\nttllSetLinkTextureAnim(${1:integer link}, ${2:integer mode}, ${3:integer face}, ${4:integer sizex}, ${5:integer sizey}, ${6:float start}, ${7:float length}, ${8:float rate})\nsnippet llSetLocalRot\nttllSetLocalRot(${1:rotation rot})\nsnippet llSetMemoryLimit\nttllSetMemoryLimit(${1:integer limit})\nsnippet llSetObjectDesc\nttllSetObjectDesc(${1:string description})\nsnippet llSetObjectName\nttllSetObjectName(${1:string name})\nsnippet llSetParcelMusicURL\nttllSetParcelMusicURL(${1:string url})\nsnippet llSetPayPrice\nttllSetPayPrice(${1:integer price}, ${2:list quick_pay_buttons})\nsnippet llSetPhysicsMaterial\nttllSetPhysicsMaterial(${1:integer mask}, ${2:float gravity_multiplier}, ${3:float restitution}, ${4:float friction}, ${5:float density})\nsnippet llSetPos\nttllSetPos(${1:vector pos})\nsnippet llSetPrimitiveParams\nttllSetPrimitiveParams(${1:list rules})\nsnippet llSetPrimMediaParams\nttllSetPrimMediaParams(${1:integer face}, ${2:list params})\nsnippet llSetRegionPos\nttllSetRegionPos(${1:vector position})\nsnippet llSetRemoteScriptAccessPin\nttllSetRemoteScriptAccessPin(${1:integer pin})\nsnippet llSetRot\nttllSetRot(${1:rotation rot})\nsnippet llSetScale\nttllSetScale(${1:vector size})\nsnippet llSetScriptState\nttllSetScriptState(${1:string name}, ${2:integer run})\nsnippet llSetSitText\nttllSetSitText(${1:string text})\nsnippet llSetSoundQueueing\nttllSetSoundQueueing(${1:integer queue})\nsnippet llSetSoundRadius\nttllSetSoundRadius(${1:float radius})\nsnippet llSetStatus\nttllSetStatus(${1:integer status}, ${2:integer value})\nsnippet llSetText\nttllSetText(${1:string text}, ${2:vector color}, ${3:float alpha})\nsnippet llSetTexture\nttllSetTexture(${1:string texture}, ${2:integer face})\nsnippet llSetTextureAnim\nttllSetTextureAnim(${1:integer mode}, ${2:integer face}, ${3:integer sizex}, ${4:integer sizey}, ${5:float start}, ${6:float length}, ${7:float rate})\nsnippet llSetTimerEvent\nttllSetTimerEvent(${1:float sec})\nsnippet llSetTorque\nttllSetTorque(${1:vector torque}, ${2:integer local})\nsnippet llSetTouchText\nttllSetTouchText(${1:string text})\nsnippet llSetVehicleFlags\nttllSetVehicleFlags(${1:integer flags})\nsnippet llSetVehicleFloatParam\nttllSetVehicleFloatParam(${1:integer param}, ${2:float value})\nsnippet llSetVehicleRotationParam\nttllSetVehicleRotationParam(${1:integer param}, ${2:rotation rot})\nsnippet llSetVehicleType\nttllSetVehicleType(${1:integer type})\nsnippet llSetVehicleVectorParam\nttllSetVehicleVectorParam(${1:integer param}, ${2:vector vec})\nsnippet llSetVelocity\nttllSetVelocity(${1:vector force}, ${2:integer local})\nsnippet llSHA1String\nttllSHA1String(${1:string src})\nsnippet llShout\nttllShout(${1:integer channel}, ${2:string msg})\nsnippet llSin\nttllSin(${1:float theta})\nsnippet llSitTarget\nttllSitTarget(${1:vector offset}, ${2:rotation rot})\nsnippet llSleep\nttllSleep(${1:float sec})\nsnippet llSqrt\nttllSqrt(${1:float val})\nsnippet llStartAnimation\nttllStartAnimation(${1:string anim})\nsnippet llStopAnimation\nttllStopAnimation(${1:string anim})\nsnippet llStringLength\nttllStringLength(${1:string str})\nsnippet llStringToBase64\nttllStringToBase64(${1:string str})\nsnippet llStringTrim\nttllStringTrim(${1:string src}, ${2:integer type})\nsnippet llSubStringIndex\nttllSubStringIndex(${1:string source}, ${2:string pattern})\nsnippet llTakeControls\nttllTakeControls(${1:integer controls}, ${2:integer accept}, ${3:integer pass_on})\nsnippet llTan\nttllTan(${1:float theta})\nsnippet llTarget\nttllTarget(${1:vector position}, ${2:float range})\nsnippet llTargetOmega\nttllTargetOmega(${1:vector axis}, ${2:float spinrate}, ${3:float gain})\nsnippet llTargetRemove\nttllTargetRemove(${1:integer handle})\nsnippet llTeleportAgent\nttllTeleportAgent(${1:key avatar}, ${2:string landmark}, ${3:vector position}, ${4:vector look_at})\nsnippet llTeleportAgentGlobalCoords\nttllTeleportAgentGlobalCoords(${1:key agent}, ${2:vector global_coordinates}, ${3:vector region_coordinates}, ${4:vector look_at})\nsnippet llTeleportAgentHome\nttllTeleportAgentHome(${1:key avatar})\nsnippet llTextBox\nttllTextBox(${1:key avatar}, ${2:string message}, ${3:integer channel})\nsnippet llToLower\nttllToLower(${1:string src})\nsnippet llToUpper\nttllToUpper(${1:string src})\nsnippet llTransferLindenDollars\nttllTransferLindenDollars(${1:key destination}, ${2:integer amount})\nsnippet llTriggerSound\nttllTriggerSound(${1:string sound}, ${2:float volume})\nsnippet llTriggerSoundLimited\nttllTriggerSoundLimited(${1:string sound}, ${2:float volume}, ${3:vector top_north_east}, ${4:vector bottom_south_west})\nsnippet llUnescapeURL\nttllUnescapeURL(${1:string url})\nsnippet llUnSit\nttllUnSit(${1:key id})\nsnippet llUpdateCharacter\nttllUpdateCharacter(${1:list options})\nsnippet llVecDist\nttllVecDist(${1:vector vec_a}, ${2:vector vec_b})\nsnippet llVecMag\nttllVecMag(${1:vector vec})\nsnippet llVecNorm\nttllVecNorm(${1:vector vec})\nsnippet llVolumeDetect\nttllVolumeDetect(${1:integer detect})\nsnippet llWanderWithin\nttllWanderWithin(${1:vector origin}, ${2:vector dist}, ${3:list options})\nsnippet llWater\nttllWater(${1:vector offset})\nsnippet llWhisper\nttllWhisper(${1:integer channel}, ${2:string msg})\nsnippet llWind\nttllWind(${1:vector offset})\nsnippet llXorBase64\nttllXorBase64(${1:string str1}, ${2:string str2}\nsnippet money\nttmoney(${1:key id}, ${2:integer amount})\ntt{\ntttt$0\ntt}\nsnippet object_rez\nttobject_rez(${1:key id})\ntt{\ntttt$0\ntt}\nsnippet on_rez\ntton_rez(${1:integer start_param})\ntt{\ntttt$0\ntt}\nsnippet path_update\nttpath_update(${1:integer type}, ${2:list reserved})\ntt{\ntttt$0\ntt}\nsnippet remote_data\nttremote_data(${1:integer event_type}, ${2:key channel}, ${3:key message_id}, ${4:string sender}, ${5:integer idata}, ${6:string sdata})\ntt{\ntttt$0\ntt}\nsnippet run_time_permissions\nttrun_time_permissions(${1:integer perm})\ntt{\ntttt$0\ntt}\nsnippet sensor\nttsensor(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet state\nttstate ${1:name}\nsnippet touch\ntttouch(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet touch_end\ntttouch_end(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet touch_start\ntttouch_start(${1:integer index})\ntt{\ntttt$0\ntt}\nsnippet transaction_result\ntttransaction_result(${1:key id}, ${2:integer success}, ${3:string data})\ntt{\ntttt$0\ntt}\nsnippet while\nttwhile (${1:condition})\ntt{\ntttt$0\ntt}\n",t.scope="lsl"})
